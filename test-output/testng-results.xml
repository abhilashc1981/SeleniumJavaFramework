<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="9" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-05T18:23:46 IST" name="Suite" finished-at="2025-05-05T18:24:23 IST" duration-ms="36897">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.loginErrorValidation()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" name="loginErrorValidation" class="rahulShettyAcademy.Tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" name="submitOrder" class="rahulShettyAcademy.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-05-05T18:23:46 IST" name="Error Validations Test" finished-at="2025-05-05T18:23:58 IST" duration-ms="11763">
      <class name="rahulShettyAcademy.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" started-at="2025-05-05T18:23:46 IST" name="launchApplication" finished-at="2025-05-05T18:23:49 IST" duration-ms="2852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginErrorValidation()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" started-at="2025-05-05T18:23:49 IST" name="loginErrorValidation" finished-at="2025-05-05T18:23:49 IST" duration-ms="363" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulShettyAcademy.Tests.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" started-at="2025-05-05T18:23:49 IST" name="tearDown" finished-at="2025-05-05T18:23:49 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" started-at="2025-05-05T18:23:49 IST" name="launchApplication" finished-at="2025-05-05T18:23:52 IST" duration-ms="2364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" started-at="2025-05-05T18:23:52 IST" name="loginErrorValidation" finished-at="2025-05-05T18:23:52 IST" duration-ms="819" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulShettyAcademy.Tests.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" started-at="2025-05-05T18:23:53 IST" name="tearDown" finished-at="2025-05-05T18:23:53 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" started-at="2025-05-05T18:23:53 IST" name="launchApplication" finished-at="2025-05-05T18:23:54 IST" duration-ms="1489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" started-at="2025-05-05T18:23:54 IST" name="productErrorValidation" finished-at="2025-05-05T18:23:58 IST" duration-ms="3134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulShettyAcademy.Tests.ErrorValidationsTest@57a3e26a]" started-at="2025-05-05T18:23:58 IST" name="tearDown" finished-at="2025-05-05T18:23:58 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulShettyAcademy.Tests.ErrorValidationsTest -->
    </test> <!-- Error Validations Test -->
    <test started-at="2025-05-05T18:23:46 IST" name="Submit Order Test" finished-at="2025-05-05T18:24:23 IST" duration-ms="36897">
      <class name="rahulShettyAcademy.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:23:46 IST" name="launchApplication" finished-at="2025-05-05T18:23:49 IST" duration-ms="2763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:23:49 IST" name="submitOrder" data-provider="getData" finished-at="2025-05-05T18:23:52 IST" duration-ms="3746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=India, password=aZYb)(12xC, product=ZARA COAT 3, email=abhilashc24@gmail.com, confirmationMessage=Thankyou for the order.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:23:52 IST" name="tearDown" finished-at="2025-05-05T18:23:53 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:23:53 IST" name="launchApplication" finished-at="2025-05-05T18:23:54 IST" duration-ms="1500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:23:54 IST" name="submitOrder" data-provider="getData" finished-at="2025-05-05T18:23:58 IST" duration-ms="3742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=India, password=aZYb)(12xC, product=ADIDAS ORIGINAL, email=abhilashc1981@hotmail.com, confirmationMessage=Thankyou for the order.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:23:58 IST" name="tearDown" finished-at="2025-05-05T18:23:58 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:23:58 IST" name="launchApplication" finished-at="2025-05-05T18:24:00 IST" duration-ms="2296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="addProductToCartTest(java.util.HashMap)[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:00 IST" name="addProductToCartTest" data-provider="getData" finished-at="2025-05-05T18:24:13 IST" duration-ms="13163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=India, password=aZYb)(12xC, product=ZARA COAT 3, email=abhilashc24@gmail.com, confirmationMessage=Thankyou for the order.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductToCartTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:13 IST" name="tearDown" finished-at="2025-05-05T18:24:13 IST" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:13 IST" name="launchApplication" finished-at="2025-05-05T18:24:16 IST" duration-ms="2300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="addProductToCartTest(java.util.HashMap)[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:16 IST" name="addProductToCartTest" data-provider="getData" finished-at="2025-05-05T18:24:19 IST" duration-ms="3176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=India, password=aZYb)(12xC, product=ADIDAS ORIGINAL, email=abhilashc1981@hotmail.com, confirmationMessage=Thankyou for the order.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductToCartTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:19 IST" name="tearDown" finished-at="2025-05-05T18:24:19 IST" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:19 IST" name="launchApplication" finished-at="2025-05-05T18:24:20 IST" duration-ms="1390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest(java.util.HashMap)[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:20 IST" name="orderHistoryTest" data-provider="getData" finished-at="2025-05-05T18:24:21 IST" depends-on-methods="rahulShettyAcademy.Tests.SubmitOrderTest.submitOrder" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=India, password=aZYb)(12xC, product=ZARA COAT 3, email=abhilashc24@gmail.com, confirmationMessage=Thankyou for the order.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:21 IST" name="tearDown" finished-at="2025-05-05T18:24:21 IST" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:21 IST" name="launchApplication" finished-at="2025-05-05T18:24:22 IST" duration-ms="1442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest(java.util.HashMap)[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:22 IST" name="orderHistoryTest" data-provider="getData" finished-at="2025-05-05T18:24:23 IST" depends-on-methods="rahulShettyAcademy.Tests.SubmitOrderTest.submitOrder" duration-ms="375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=India, password=aZYb)(12xC, product=ADIDAS ORIGINAL, email=abhilashc1981@hotmail.com, confirmationMessage=Thankyou for the order.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulShettyAcademy.Tests.SubmitOrderTest@f58853c]" started-at="2025-05-05T18:24:23 IST" name="tearDown" finished-at="2025-05-05T18:24:23 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulShettyAcademy.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
